# -*- coding: utf-8 -*-
"""BucklingLab.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f4gqvb0rL6MUTAWat1Sy_aPllWKqP_37
"""

import numpy as np
import matplotlib.pyplot as plt
k=1
real_length = np.array([6.005,4.06,2.071,1.563])
real_width = np.array([0.5,0.5,0.5,0.5])
real_thickness = np.array([0.123,0.128,0.121,0.125])

failure_load = np.array([167.107,522.035,1232.237,1683.818])

nom_length = np.array([6,4,2,1.5])
nom_width = np.array([0.5,0.5,0.5,0.5])
nom_thickness = np.array([0.125,0.125,0.125,0.125])

real_I = (1/12)*(real_width)*(real_thickness)*(real_thickness)*(real_thickness)
nom_I = (1/12)*(nom_width)*(nom_thickness)*(nom_thickness)*(nom_thickness)

real_A = real_thickness*real_width
nom_A = nom_thickness*nom_width

real_r = np.sqrt(real_I/real_A)
nom_r = np.sqrt(nom_I/nom_A)

real_slenderness = real_length/real_r
nom_slenderness = nom_length/nom_r

print(real_I, nom_I)
print(real_A, nom_A)
print(real_r, nom_r)
print(real_slenderness, nom_slenderness)

real_crit_load = ((np.pi**2)*(10**7)*(real_A))/(real_slenderness**2)
nom_crit_load = ((np.pi**2)*(10**7)*(nom_A))/(nom_slenderness**2)

real_load = 40000*real_A
nom_load = 40000*nom_A

real_theory_load = np.zeros(4)
nom_theory_load = np.zeros(4)

for i in range(4):
  if(real_crit_load[i] < real_load[i]):
    real_theory_load = real_load
  else:
    real_theory_load = real_crit_load

for j in range(4):
  if(nom_crit_load[j] < nom_load[j]):
    nom_theory_load = nom_load
  else:
    nom_theory_load = nom_crit_load

print(nom_theory_load)
print(failure_load)

plt.plot(real_slenderness,failure_load, color = 'red')
plt.plot(real_slenderness,real_theory_load, color = 'blue')
plt.plot(nom_slenderness,nom_theory_load, color = 'green')
plt.title("Failure Load vs. Slenderness Ratio of 6061 Aluminum)")
plt.xlabel("Slenderness Ratio")
plt.ylabel("Load (lbs)")
plt.legend(['Experimental-Real','Experimental-Theoretical', 'Nominal-Theoretical'],loc='upper right')
plt.show()